Array is a collection of values of same data type stored in contiguous memory locations, allowing for efficient indexing and iteration.

Arrays in Rust are stored in a single block of memory, with each element being of the same size.
The compiler knows the size of the array at compile-time, which allows for bounds checkinh and prevents common errors like buffer overflows.
When you access an array element, Rust performs a bounds check to ensure the index is within the valid range.
arrays have type [type; number of elements]
arrays must only contain the same type.
arrays cannot change their size.
you can't add or remove items or change the type of the items inside.

Used to store data that needs to be accessed quickly and efficiently.

To create an array, put some data indise square brackets separated by commas.
It you want an array with all the same value, you can declare it by entering the value, then a semicolon, and then the number of itmes you need it to repeat: ["a"; 5];
You can index (get) entries in an array with [].
