Borrowing in Rust is a way to use a value without taking ownership of it, allowing multiple parts of the code to access the same value without copying it.

When you borrow a value, Rust creates a reference to the original value, which can be used to access the value without moving it.

Used to avoid unnecessary copies of data, to share between different parts of the code, and ensure memory safety.

We can borrow a value by using the & operator, which creates a reference to the original value.
You can also use the &mut operator to create a mutable reference.

Borrowing is similar to ownership in Rust, but instead of taking ownership of a value, borrowing allows you to use a value without taking ownership of it.
